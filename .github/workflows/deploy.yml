name: Deploy Todo App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd infrastructure/terraform
        terraform init

    - name: Terraform Apply
      id: terraform
      run: |
        cd infrastructure/terraform
        terraform apply -auto-approve -var="iam_user_name=${{ secrets.IAM_USER_NAME }}"
        echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
        echo "PRIVATE_KEY=$(terraform output -raw private_key | base64 -w0)" >> $GITHUB_ENV
      env:
        GITHUB_ENV: ${{ github.env_file }}
        GITHUB_OUTPUT: ${{ github.output_file }}

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Frontend .env oluÅŸtur
    - name: Create Frontend env
      run: |
        echo "REACT_APP_API_URL=http://${{ env.EC2_IP }}:3001" > frontend/.env

    # Frontend Derleme ve Deploy
    - name: Install Frontend Dependencies
      run: cd frontend && npm install

    - name: Build Frontend
      run: cd frontend && npm run build

    - name: Deploy to S3
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region eu-central-1
        aws s3 sync frontend/build/ s3://todo-app-frontend-bucket-oktay

    # Backend Deploy
    - name: Deploy Backend to EC2
      run: |
        EC2_IP=${{ env.EC2_IP }}
        PRIVATE_KEY=$(echo "${{ env.PRIVATE_KEY }}" | base64 -d)
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no -r backend/* ec2-user@$EC2_IP:/home/ec2-user/app/
        ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@$EC2_IP "cd /home/ec2-user/app && npm install && pm2 restart server" 