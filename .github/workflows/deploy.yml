name: Deploy Todo App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform-workspace: main

    - name: Terraform Init & Apply
      id: terraform
      run: |
        cd infrastructure/terraform
        terraform init -input=false
        terraform apply -auto-approve -var="iam_user_name=${{ secrets.IAM_USER_NAME }}"
        
        # Çıktıları dosyaya yaz
        terraform output -raw ec2_public_ip > ec2_ip.txt
        terraform output -raw private_key > private_key.pem
        
        # Artifact olarak kaydet
        echo "EC2_IP=$(cat ec2_ip.txt)" >> $GITHUB_ENV
        echo "PRIVATE_KEY_FILE=private_key.pem" >> $GITHUB_ENV

    - name: Upload Private Key
      uses: actions/upload-artifact@v4
      with:
        name: ssh-key
        path: infrastructure/terraform/private_key.pem

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Configure Frontend
      run: |
        echo "REACT_APP_API_URL=http://$(terraform -chdir=infrastructure/terraform output -raw ec2_public_ip):3001" > frontend/.env

    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Deploy Frontend
      run: |
        aws s3 sync frontend/build/ s3://todo-app-frontend-bucket-oktay --delete

    - name: Deploy Backend
      run: |
        EC2_IP=${{ env.EC2_IP }}
        # Artifact'tan private key'i al
        chmod 600 ${{ env.PRIVATE_KEY_FILE }}
        
        scp -i ${{ env.PRIVATE_KEY_FILE }} -o StrictHostKeyChecking=no -r backend/* ec2-user@$EC2_IP:/home/ec2-user/app/
        ssh -i ${{ env.PRIVATE_KEY_FILE }} ec2-user@$EC2_IP "cd /home/ec2-user/app && npm ci && pm2 restart all" 